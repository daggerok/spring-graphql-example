server.port=8080

spring.output.ansi.enabled=always
#
logging.level.io.r2dbc=trace
logging.level.io.rsocket=trace
#
spring.application.name=customers
spring.r2dbc.url=r2dbc:h2:file:///./target/${spring.application.name}
spring.r2dbc.username=${spring.application.name}
spring.r2dbc.password=${spring.application.name}
spring.r2dbc.properties.DB_CLOSE_ON_EXIT=FALSE
spring.r2dbc.properties.AUTO_SERVER=TRUE
#
spring.sql.init.mode=always
spring.liquibase.enabled=false
#
management.metrics.graphql.autotime.enabled=false
management.endpoints.web.exposure.include=health,metrics,info
#
spring.graphql.graphiql.enabled=true
spring.graphql.path=/graphql
#
spring.graphql.schema.locations=classpath:graphql/
spring.graphql.schema.fileExtensions=.graphqls, .graphql, .gqls, .gql
#
spring.graphql.websocket.connection-init-timeout=60s

## see: https://docs.spring.io/spring-graphql/docs/1.0.0-M3/api/org/springframework/graphql/boot/GraphQlCorsProperties.html
## Comma-separated list of origins to allow. '*' allows all origins.
#spring.graphql.cors.allowed-origins=https://example.org
## Comma-separated list of origin patterns like 'https://*.example.com' to allow.
#spring.graphql.cors.allowed-origin-patterns=
## Comma-separated list of methods to allow. '*' allows all methods.
#spring.graphql.cors.allowed-methods=GET,POST
## Comma-separated list of headers to allow in a request. '*' allows all headers.
#spring.graphql.cors.allowed-headers=
## Comma-separated list of headers to include in a response.
#spring.graphql.cors.exposed-headers=
## Whether credentials are supported. When not set, credentials are not supported.
#spring.graphql.cors.allow-credentials=
## How long the response from a pre-flight request can be cached by clients.
#spring.graphql.cors.max-age=1800s
